[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 21)
[debug]       Load.loadUnit: plugins took 66.5337ms
[debug]       Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\79258\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\79258\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2521 ms
[debug]           Load.resolveProject(global-plugins) took 1.4604ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\79258\.sbt\1.0\plugins, plugins: List(<none>))) took 4.4182ms
[debug] [Loading] Done in C:\Users\79258\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 6.8908ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0186ms
[debug]     Load.loadUnit(file:/C:/Users/79258/.sbt/1.0/plugins/, ...) took 74.7271ms
[debug]   Load.apply: load took 77.1012ms
[debug]   Load.apply: resolveProjects took 0.3984ms
[debug]   Load.apply: finalTransforms took 7.8945ms
[debug]   Load.apply: config.delegates took 0.3115ms
[debug]   Load.apply: Def.make(settings)... took 56.0617ms
[debug]   Load.apply: structureIndex took 18.3476ms
[debug]   Load.apply: mkStreams took 0.0034ms
[info] loading global plugins from C:\Users\79258\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 351.1021ms
[debug]           Load.loadUnit: plugins took 27.618ms
[debug]           Load.loadUnit: defsScala took 0.0104ms
[debug] [Loading] Scanning directory C:\Users\79258\IdeaProjects\Comp-API-log-component\project
[debug]             Load.loadUnit: mkEval took 0.3132ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8472 ms
[info] loading settings for project comp-api-log-component-build from plugin.sbt,idea2.sbt ...
[debug]               Load.resolveProject(comp-api-log-component-build) took 2.2149ms
[debug]             Load.loadTransitive: finalizeProject(Project(id comp-api-log-component-build, base: C:\Users\79258\IdeaProjects\Comp-API-log-component\project, plugins: List(<none>))) took 4.9253ms
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component\project, returning: (comp-api-log-component-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 43.7361ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.8413ms
[debug]         Load.loadUnit(file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/project/, ...) took 79.3419ms
[debug]       Load.apply: load took 80.8207ms
[debug]       Load.apply: resolveProjects took 0.0938ms
[debug]       Load.apply: finalTransforms took 8.9535ms
[debug]       Load.apply: config.delegates took 0.5758ms
[debug]       Load.apply: Def.make(settings)... took 48.9927ms
[debug]       Load.apply: structureIndex took 17.5807ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\79258\IdeaProjects\Comp-API-log-component\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 310.5785ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\79258\IdeaProjects\Comp-API-log-component
[debug]       Load.loadUnit: mkEval took 0.31ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.591 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 74.7655ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\79258\IdeaProjects\Comp-API-log-component, plugins: List(<none>))) took 76.9373ms
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 172.186ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.2996ms
[debug]   Load.loadUnit(file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/, ...) took 503.0534ms
[debug] Load.apply: load took 505.0205ms
[debug] Load.apply: resolveProjects took 0.1278ms
[debug] Load.apply: finalTransforms took 23.478ms
[debug] Load.apply: config.delegates took 0.3342ms
[debug] Load.apply: Def.make(settings)... took 57.8711ms
[debug] Load.apply: structureIndex took 18.095ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to Comp-API-log-component (in build file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
