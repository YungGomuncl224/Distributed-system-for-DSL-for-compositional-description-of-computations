[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 21)
[debug]       Load.loadUnit: plugins took 107.2397ms
[debug]       Load.loadUnit: defsScala took 0.008ms
[debug] [Loading] Scanning directory C:\Users\79258\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\79258\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2254 ms
[debug]           Load.resolveProject(global-plugins) took 2.8055ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\79258\.sbt\1.0\plugins, plugins: List(<none>))) took 5.4807ms
[debug] [Loading] Done in C:\Users\79258\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 6.4619ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0102ms
[debug]     Load.loadUnit(file:/C:/Users/79258/.sbt/1.0/plugins/, ...) took 115.5891ms
[debug]   Load.apply: load took 121.144ms
[debug]   Load.apply: resolveProjects took 0.1413ms
[debug]   Load.apply: finalTransforms took 19.6956ms
[debug]   Load.apply: config.delegates took 0.4391ms
[debug]   Load.apply: Def.make(settings)... took 95.9514ms
[debug]   Load.apply: structureIndex took 41.7255ms
[debug]   Load.apply: mkStreams took 0.0041ms
[info] loading global plugins from C:\Users\79258\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 634.4397ms
[debug]           Load.loadUnit: plugins took 34.4607ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\79258\IdeaProjects\Comp-API-log-component\project
[debug]             Load.loadUnit: mkEval took 0.8333ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3355 ms
[info] loading settings for project comp-api-log-component-build from idea10.sbt ...
[debug]               Load.resolveProject(comp-api-log-component-build) took 2.0778ms
[debug]             Load.loadTransitive: finalizeProject(Project(id comp-api-log-component-build, base: C:\Users\79258\IdeaProjects\Comp-API-log-component\project, plugins: List(<none>))) took 3.7744ms
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component\project, returning: (comp-api-log-component-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 56.7563ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3078ms
[debug]         Load.loadUnit(file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/project/, ...) took 96.4226ms
[debug]       Load.apply: load took 98.685ms
[debug]       Load.apply: resolveProjects took 0.1414ms
[debug]       Load.apply: finalTransforms took 8.9794ms
[debug]       Load.apply: config.delegates took 0.4455ms
[debug]       Load.apply: Def.make(settings)... took 39.7739ms
[debug]       Load.apply: structureIndex took 21.2229ms
[debug]       Load.apply: mkStreams took 0.0059ms
[info] loading project definition from C:\Users\79258\IdeaProjects\Comp-API-log-component\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 358.3587ms
[debug]     Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory C:\Users\79258\IdeaProjects\Comp-API-log-component
[debug]       Load.loadUnit: mkEval took 1.2516ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.1067 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 34.5266ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\79258\IdeaProjects\Comp-API-log-component, plugins: List(<none>))) took 36.0361ms
[debug] [Loading] Done in C:\Users\79258\IdeaProjects\Comp-API-log-component, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1302.2659ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.7027ms
[debug]   Load.loadUnit(file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/, ...) took 1669.5378ms
[debug] Load.apply: load took 1671.9208ms
[debug] Load.apply: resolveProjects took 0.1235ms
[debug] Load.apply: finalTransforms took 19.5575ms
[debug] Load.apply: config.delegates took 0.3509ms
[debug] Load.apply: Def.make(settings)... took 46.9483ms
[debug] Load.apply: structureIndex took 15.7016ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to Comp-API-log-component (in build file:/C:/Users/79258/IdeaProjects/Comp-API-log-component/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
